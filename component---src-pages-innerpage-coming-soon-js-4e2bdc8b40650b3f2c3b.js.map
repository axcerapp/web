{"version":3,"sources":["webpack://fastland-react-app/./src/pages/innerpage/coming-soon.js","webpack://fastland-react-app/./src/sections/utility/ComingSoon/Components/CountDownWIdget/style.js","webpack://fastland-react-app/./src/sections/utility/ComingSoon/Components/CountDownWIdget/index.js","webpack://fastland-react-app/./src/sections/utility/ComingSoon/style.js","webpack://fastland-react-app/./src/sections/utility/ComingSoon/ComingSoonSection.js"],"names":["header","headerClasses","containerFluid","CommingSoon","headerConfig","Count","styled","Box","Single","Title","Heading","attrs","className","Text","Paragraph","useState","countDays","setCountDays","countHours","setCountHours","countMinutes","setCountMinutes","countSeconds","setCountSeconds","interval","useRef","useEffect","yearTrget","monthTrget","dayTrget","countdowndate","intervalClean","current","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","id","Countdown","Image","p","backgroundImage","FromSection","FormButton","Button","FormText","Form","InputBox","FormInput","backgroundColor","Container","Row","Col","xs","Images","as","mlLG","mlXXL","placeholder","required"],"mappings":"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","file":"component---src-pages-innerpage-coming-soon-js-4e2bdc8b40650b3f2c3b.js","sourcesContent":["import React from \"react\";\nimport ComingSoonSection  from \"~sections/utility/ComingSoon\";\nimport { PageWrapper } from \"~components/Core\";\n\nconst header = {\n  headerClasses: \"d-none\",\n  containerFluid:false,\n}\n\nexport default function CommingSoon() {\n  return (\n    <PageWrapper headerConfig={header}>\n        <ComingSoonSection/>\n    </PageWrapper>\n  )\n}\n","import styled from 'styled-components/macro';\nimport { Box, Heading,Button,Paragraph } from '~styled';\n\nconst Count = styled(Box)`\n    display: flex;\n    justify-content: flex-end;\n    flex-wrap: wrap;\n    margin-bottom: 55px;\n    @media (min-width: 992px){\n        margin-right: -60px;\n    }\n`\nCount.Single = styled(Box)`\n    text-align: center;\n    width: 50%;\n    flex: 0 0 50%;\n    margin-bottom: 20px;\n    @media (min-width: 575px) {\n        width: 25%;\n        flex: 0 0 25%;\n    }\n    &:nth-child(1){\n        .counter-heading{\n            &:before {   \n                color: #ff5722;\n                display: block;\n            }\n        }\n    }\n    &:nth-child(2){\n        @media (min-width: 575px){\n            .counter-heading{\n                &:before {   \n                    color: #ff5722;\n                    display: block;\n                }\n            }\n        }\n    }\n    &:nth-child(3){\n        .counter-heading{\n            &:before {   \n                color: #ff5722;\n                display: block;\n            }\n        }\n    }\n\n`\nCount.Title = styled(Heading).attrs({className:\"counter-heading\"})`\n    font-size: 45px;\n    font-weight: 500;\n    letter-spacing: normal;\n    line-height: 54px;\n    color: #ff5722;\n    position: relative;\n    &:before {\n        content: \":\";\n        font-size: 45px;\n        font-weight: 500;\n        letter-spacing: normal;\n        line-height: 54px;\n        color: transparent;\n        display: none;\n        right: 0;\n        top: 0;\n        position: absolute;\n    }\n   \n`\nCount.Text = styled(Paragraph)`\nfont-size: 16px;\nfont-weight: 500;\nletter-spacing: normal;\nline-height: 28px;\ncolor: rgba(38, 39, 41, 0.7);\nmargin-bottom: 0;\n`\n\n\nexport default Count;","import React, { useState, useRef, useEffect } from \"react\"\nimport Count  from './style'\nconst CountDown = () => {\n  const [countDays, setCountDays] = useState(\"00\")\n  const [countHours, setCountHours] = useState(\"00\")\n  const [countMinutes, setCountMinutes] = useState(\"00\")\n  const [countSeconds, setCountSeconds] = useState(\"00\")\n\n  let interval = useRef()\n  const startTimer = ({yearTrget,monthTrget,dayTrget}) => {\n    const countdowndate = new Date(`${yearTrget},${monthTrget},${dayTrget},  00:00:00`).getTime()\n    interval = setInterval(() => {\n      const now = new Date().getTime()\n      const distance = countdowndate - now\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24))\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000)\n      if (distance < 0) {\n        clearInterval(interval.current)\n      } else {\n        //update Timer\n        setCountDays(days)\n        setCountHours(hours)\n        setCountMinutes(minutes)\n        setCountSeconds(seconds)\n      }\n    }, 1000)\n  }\n\n  useEffect(() => {\n    let intervalClean = interval.current;\n    startTimer({yearTrget:\"2021\",monthTrget:\"08\",dayTrget:\"31\"})\n    return () => {\n      clearInterval(intervalClean)\n    }\n  })\n  return (\n    <Count>\n      <Count.Single>\n        <Count.Title id=\"days\">{countDays}</Count.Title>\n        <Count.Text>Days</Count.Text>\n      </Count.Single>\n      <Count.Single>\n        <Count.Title id=\"hours\">{countHours}</Count.Title>\n        <Count.Text>Hours</Count.Text>\n      </Count.Single>\n      <Count.Single>\n        <Count.Title id=\"minutes\">{countMinutes}</Count.Title>\n        <Count.Text>Minutes</Count.Text>\n      </Count.Single>\n      <Count.Single>\n        <Count.Title id=\"seconds\">{countSeconds}</Count.Title>\n        <Count.Text>Seconds</Count.Text>\n      </Count.Single>\n    </Count>\n  )\n}\n\nexport default CountDown","import styled from \"styled-components/macro\"\nimport { Box, Heading, Button, Paragraph } from \"~styled\"\n\nconst Countdown = styled(Box)`\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    overflow: auto;\n    padding-top: 100px;\n    padding-bottom: 100px;\n    color: #262729;\n`\nCountdown.Image = styled.div`\n  height:100%;\n  width:100%;\n  left:0;\n  top:0;\n  position:absolute;\n  @media (min-width:992px){\n    width:40%;\n    background-image:${ p => p.backgroundImage ? `url(${p.backgroundImage})` : null};\n    background-position: center right;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n  @media (min-width:1200px){\n    width:43%;\n  }\n  @media (min-width:1400px){\n    width:45%;\n  }\n  &:before{\n    background:#000;\n    content:\"\";\n    position:absolute;\n    left:0;\n    top:0;\n    bottom:0;\n    right:0;\n    opacity: 0;\n    @media (min-width:992px){\n      opacity:0\n    }\n  }\n`\nCountdown.Title = styled(Heading)`\n  font-weight: 500;\n  letter-spacing: normal;\n  line-height: 1.2;\n  font-size: 30px;\n  color:inherit;\n  margin-bottom: 33px;\n\n  @media (min-width: 768px) {\n    font-size: 38px;\n  }\n\n  @media (min-width: 992px) {\n    font-size: 45px;\n  }\n`\nCountdown.Text = styled(Paragraph)`\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 32px;\n  margin-bottom: 90px;\n  opacity:.7;\n  color:inherit;\n`\nCountdown.FromSection = styled(Box)`\n  form {\n    @media (min-width: 992px) {\n      margin-right: 25px;\n    }\n    @media (min-width: 1200px) {\n      margin-right: 40px;\n    }\n    .form-floating {\n      label {\n        padding-left: 25px;\n        font-size: 15px;\n        min-height: 56px;\n        padding-top: 0;\n        padding-bottom: 0;\n        color: rgba(38, 39, 41, 0.5);\n      }\n\n      textarea {\n        min-height: 175px;\n\n        & ~ label {\n          margin-top: 20px;\n        }\n      }\n\n      input {\n        & ~ label {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n\n    .form-control {\n      background: #fff;\n      padding-left: 25px;\n      padding-right: 25px;\n      border: 0;\n    }\n\n    input.form-control {\n      border-radius: 500px;\n      background: #fff;\n      color: #727c92;\n      height: 56px !important;\n      font-size: 16px;\n      font-weight: 400;\n      letter-spacing: normal;\n      line-height: 30px;\n      margin-bottom: 24px;\n\n      &::placeholder {\n        color: transparent;\n      }\n    }\n\n    textarea {\n      min-height: 175px;\n      border-radius: 15px;\n    }\n\n    .form-check {\n      input.form-check-input {\n        min-width: 20px;\n        min-height: 20px;\n        max-width: 20px;\n        max-height: 20px;\n        border-radius: 3px;\n        border: 0;\n\n        &:checked[type=\"checkbox\"] {\n          background-color: #5034fc !important;\n          box-shadow: none;\n        }\n\n        &:focus {\n          box-shadow: none;\n        }\n      }\n\n      .form-check-label {\n        margin-left: 8px;\n        font-size: 13px;\n        color:inherit;\n      }\n    }\n  }\n`\nCountdown.FormButton = styled(Button)`\n  min-width: 180px;\n  height: 56px;\n  border-radius: 500px;\n  color: #fff;\n  box-shadow: 0 4px 4px rgb(253 100 52 / 30%);\n  &:hover {\n    color: #fff;\n  }\n`\nCountdown.FormText = styled(Box)`\n  font-size: 18px;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 32px;\n  color: rgba(37, 55, 63, 0.7);\n  margin-bottom: 16px;\n  a {\n    color: #5034fc;\n    margin-left: 11px;\n  }\n`\n\nCountdown.Form = styled(Box)`\nborder-radius: 75px;\n  @media (min-width: 480px) {\n    background-color: #fff;\n  }\n` \nCountdown.InputBox = styled(Box)`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    border-radius: 75px;\n` \nCountdown.FormInput = styled(Box)`\n    width: 100%;\n    border-radius: 10px;\n    border: 2px solid rgba(128, 138, 142, 0.2);\n    color: rgba(37, 55, 63, 0.7);\n    font-size: 16px;\n    font-weight: 400;\n    letter-spacing: normal;\n    line-height: 28px;\n    padding: 5px 25px;\n    margin-bottom: 10px;\n    border-radius: 500px;\n    height: 70px;\n    margin-left: 5px;\n    &:focus {\n      background-color: transparent !important;\n      outline: none;\n      box-shadow: none;\n\n      &::placeholder {\n        color: #000;\n      }\n    }\n    @media (min-width: 480px) {\n      border: none;\n      background-color: transparent;\n      \n  margin-right: 7px;\n  margin-bottom: 0;\n    }\n` \nCountdown.Button = styled(Button)`\n    height: 50px;\n    min-width: 137px;\n    border-radius: 500px;\n    box-shadow: 0 4px 4px rgb(253 100 52 / 30%);\n    @media (min-width: 480px) {\n      margin-right: 10px;\n    }\n` \n\nCountdown.Box = styled(Box)`\n  /* height:100vh; */\n` \n\nexport default Countdown\n","import React from \"react\"\nimport { Col, Container, Row } from \"react-bootstrap\"\n// import { Form } from \"~components\"\nimport { Images } from \"~data\"\nimport CountDown from \"./Components/CountDownWIdget\"\nimport Countdown from \"./style\"\n\nconst ComingSoonSection = () => {\n  return (\n    <Countdown backgroundColor=\"#f3f4f6\">\n      <Container className=\"position-static\">\n        <Row className=\"align-items-center justify-content-center position-static\">\n          <Col xs=\"12\" className=\"col-xl-6 col-lg-4 position-static\">\n            <Countdown.Image\n              backgroundImage={Images.CountdownBgImg}\n            />\n          </Col>\n          <Col\n            xs=\"12\"\n            className=\"col-xl-6 col-lg-8 col-md-10 text-center text-lg-end\"\n          >\n            <Countdown.Box>\n              <Countdown.Title as=\"h2\">\n                Fastland is coming soon<br className=\"d-none d-xs-block d-lg-none d-xxl-block\" /> with remarkable updates\n              </Countdown.Title>\n              <Countdown.Text as=\"p\">\n                Our focus is always on finding the best people to work with. Our<br className=\"d-none d-md-block\" />\n                bar is high, but you look ready to take on the challenge..\n              </Countdown.Text>\n              <Countdown.FromSection>\n                <CountDown />\n                <Countdown.FormText>\n                  Get notified on product launch!\n                </Countdown.FormText>\n                  <Countdown.Form mlLG=\"80px\" mlXXL=\"157px\">\n                    <Countdown.InputBox className=\"justify-content-center flex-column flex-xs-row\">\n                      <Countdown.FormInput as=\"input\" placeholder=\"Enter your email\" required />\n                      <Countdown.Button className=\" btn btn-primary text-white\">\n                        Start Now!\n                      </Countdown.Button>\n                    </Countdown.InputBox>\n                  </Countdown.Form>\n              </Countdown.FromSection>\n            </Countdown.Box>\n          </Col>\n        </Row>\n      </Container>\n    </Countdown>\n  )\n}\n\nexport default ComingSoonSection\n"],"sourceRoot":""}